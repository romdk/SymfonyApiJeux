{% extends 'base.html.twig' %}

{% block title %}Hello HomeController!{% endblock %}

{% block body %}
<h4>Please search a game</h4>
<div>
    <input type="text" name="search" id="search" placeholder="search...">
    <select name="games" id="games"></select>
</div>

<div>
    <img id="game-img" src="{{ asset("img/image.svg") }}" alt="">
    <div class="description">
        <h3 id="title"></h3>
        <div class="infos">
            <p id="players"></p>
            <p id="minutes"></p>
        </div>
        <p class="text" id="text"></p>
    </div>
</div>
{% endblock %}
{% block javascripts %}

    <script>
        window.addEventListener('DOMContentLoaded', (event) => {
            const search = document.querySelector('#search')
            const select = document.querySelector('#games')
            const img = document.querySelector('#game-img')
            const title = document.querySelector('#title')
            const p = document.querySelector('#text')
            const players = document.querySelector('#players')
            const minutes = document.querySelector('#minutes')

            search.addEventListener('focusout', (e) => {
                select.innerText = null
                e.preventDefault()
                const searchValue = search.value
                console.log(searchValue)
                const url = '/games'
                fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'Accept': '*/*'
                    },
                    body: new URLSearchParams({
                        'searchValue' : searchValue
                    })
                })
                .then(async (response) => {
                    const rep = await response.json()
                    for(r in rep["games"]) {
                        let option = document.createElement('option')
                        option.innerText = rep["games"][r]["name"] + " (" + rep["games"][r]["year_published"] + ")"
                        option.value = rep["games"][r]["id"]
                        select.append(option)
                    }
                })
            })

            select.addEventListener('change', (e) => {
                e.preventDefault()
                const gameId = select.selectedOptions[0].value
                const urlGame = '/game'
                fetch(urlGame, {
                    method: 'POST',
                    headers: {
                        'Content-type': 'application/x-www-form-urlencoded',
                        'Accept': '*/*'
                    },
                    body: new URLSearchParams({
                        'gameId' : gameId
                    })
                })
                .then(async (response) => {
                    const rep = await response.json()
                    img.src = rep["games"][0]["image_url"] ? rep["games"][0]["image_url"] : '../img/image.svg'
                    p.innerHTML = rep["games"][0]["description"]
                    title.innerHTML = rep["games"][0]["name"]
                    players.innerHTML = "<i class='fa-solid fa-users-line'></i> From "+rep["games"][0]["min_players"]+" to "+rep["games"][0]["max_players"]+" players"
                    minutes.innerHTML = "<i class='fa-regular fa-clock'></i>"+ rep["games"][0]["playtime"]+" minutes"
                })
            })
        })
    </script>
{% endblock %}